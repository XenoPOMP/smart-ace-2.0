import { WithParams } from '@xenopomp/advanced-types';
import { IBM_Plex_Sans } from 'next/font/google';
import { ImageResponse } from 'next/og';
import { CSSProperties } from 'react';

import { servicesData } from '@/src/data/services.data';

export default async function Image({ params }: WithParams<{}, 'serviceId'>) {
  const sizes: Record<'height' | 'width', number> = {
    width: 1200,
    height: 610,
  };

  const LINE_HEIGHT = 20;
  const PADDING = LINE_HEIGHT * 2;

  const currentService = servicesData.groups
    .flat()
    .flatMap(group => group.services)
    .find(service => service.id === +params.serviceId);

  return new ImageResponse(
    (
      <div
        style={{
          background: '#F3F3F3',
          display: 'flex',
          flexDirection: 'column',
          ...sizes,
        }}
      >
        <div
          style={{
            flexGrow: 1,
            display: 'flex',
            padding: `${PADDING}px ${PADDING}px 0 ${PADDING}px`,
            gap: PADDING,
          }}
        >
          <svg
            width='200'
            height='200'
            viewBox='0 0 200 200'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              d='M200 100C200 155.228 155.228 200 100 200C44.7715 200 0 155.228 0 100C0 44.7715 44.7715 0 100 0C155.228 0 200 44.7715 200 100ZM20.3075 100C20.3075 144.013 55.987 179.692 100 179.692C144.013 179.692 179.692 144.013 179.692 100C179.692 55.987 144.013 20.3075 100 20.3075C55.987 20.3075 20.3075 55.987 20.3075 100Z'
              fill='black'
            />
            <path
              fill-rule='evenodd'
              clip-rule='evenodd'
              d='M81.6183 28.4589L82.803 27.2729C50.9317 34.9952 27.2627 63.7122 27.2627 97.9575C27.2627 137.621 59.0139 169.869 98.4855 170.67V169.169C95.9603 166.139 90.6067 159.775 89.3946 158.563C87.8795 157.048 81.8188 147.957 75.7582 135.836C71.3659 127.051 75.7606 111.386 78.1285 104.386C78.189 103.656 78.3802 102.569 78.7757 100.987C79.9878 96.1386 89.3817 88.8658 93.9272 85.8355H109.079C109.584 84.3204 112.412 81.2901 119.685 81.2901C126.958 81.2901 122.715 76.2396 119.685 73.7143L106.048 72.1992C105.038 71.6941 102.109 70.381 98.4726 69.1689C94.8363 67.9568 85.8464 69.6739 81.806 70.684L69.6848 72.1992C74.2302 74.2194 83.0181 78.2598 81.806 78.2598C80.2908 78.2598 71.1999 82.8052 68.1696 84.3204C65.7454 85.5325 53.0181 98.9669 46.9575 105.533C45.9474 107.553 43.9272 110.381 43.9272 105.533C43.9272 100.684 52.008 91.3911 56.0484 87.3507V69.1689C56.0484 58.3387 72.9726 37.6527 81.6183 28.4589ZM80.3037 107.048C79.7986 111.593 79.0916 122.502 80.3037 129.775C81.5158 137.048 102.021 159.068 112.122 169.169V169.677C127.871 167.033 141.903 159.326 152.488 148.288C140.661 144.386 119.576 137.594 107.575 134.321C96.4579 131.289 85.973 116.109 81.916 107.048H80.3037ZM172.717 97.9575C172.717 113.788 167.659 128.438 159.071 140.378C142.903 137.851 110.603 131.288 104.544 126.745L83.3321 105.533H95.4423C110.594 101.492 140.897 88.5628 140.897 69.1689V37.8168C151.35 44.9404 159.849 54.7178 165.426 66.1796L165.14 66.1385C164.635 71.6941 163.019 83.7143 160.595 87.3506C157.564 91.8961 152.759 97.3291 148.473 99.4719C145.443 100.987 120.696 113.108 115.14 114.623C122.211 114.623 153.019 104.017 157.564 100.987C162.11 97.9567 169.685 91.8961 171.201 88.8658C171.417 88.4335 171.668 87.8983 171.941 87.2965C172.452 90.7762 172.717 94.3359 172.717 97.9575Z'
              fill='black'
            />
          </svg>

          <h1
            style={{
              fontSize: '108px',
              fontWeight: 600,
            }}
          >
            {currentService?.title}
          </h1>
        </div>

        <div
          style={{
            flexGrow: 1,
            display: 'flex',
          }}
        ></div>

        <div
          style={{
            width: sizes.width,
            height: LINE_HEIGHT,
            background: '#654FEA',
          }}
        ></div>
      </div>
    ),
    {
      ...sizes,
    }
  );
}
